apiVersion: kubedb.com/v1alpha2
kind: Druid
metadata:
  name: druid-quickstart
  namespace: demo
spec:
  version: 28.0.1
  storageType: Ephemeral
  #  configSecret:
  #    name: custom-config
  deepStorage:
    type: s3
    configSecret:
      name: deep-storage-config
  metadataStorage:
    name: mysql-demo
    namespace: demo
    createTables: true
  zookeeperRef:
    name: zk-demo
    namespace: demo
  topology:
    coordinators:
      replicas: 1
      podTemplate:
        spec:
          containers:
          - name: druid
            resources:
              requests:
                memory: 1Gi
                cpu: 500m
              limits:
                memory: 5Gi
                cpu: 1000m
#    overlords:
#      replicas: 1
#      podTemplate:
#        spec:
#          containers:
#            - name: druid
#              resources:
#                requests:
#                  memory: 1Gi
#                  cpu: 500m
#                limits:
#                  memory: 5Gi
#                  cpu: 1000m
    brokers:
      replicas: 1
      podTemplate:
        spec:
          containers:
            - name: druid
              resources:
                requests:
                  memory: 1Gi
                  cpu: 500m
                limits:
                  memory: 5Gi
                  cpu: 1000m
    historicals:
      replicas: 1
      storage:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: "linode-block-storage"
      podTemplate:
        spec:
          containers:
            - name: druid
              resources:
                requests:
                  memory: 1Gi
                  cpu: 500m
                limits:
                  memory: 5Gi
                  cpu: 1000m
    middleManagers:
      replicas: 1
      podTemplate:
        spec:
          containers:
            - name: druid
              resources:
                requests:
                  memory: 2.5Gi
                  cpu: 500m
                limits:
                  memory: 5Gi
                  cpu: 1000m
      storage:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: "linode-block-storage"
#        storageClassName: "longhorn"
    routers:
      replicas: 1
  serviceTemplates:
    - alias: primary
      spec:
        type: LoadBalancer
        ports:
          - name: routers
            port: 8888
  monitor:
    agent: prometheus.io/operator
    prometheus:
      serviceMonitor:
        labels:
          release: prometheus
        interval: 10s