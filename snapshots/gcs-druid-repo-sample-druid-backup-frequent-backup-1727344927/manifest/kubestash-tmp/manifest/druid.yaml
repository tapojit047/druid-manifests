metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"kubedb.com/v1alpha2","kind":"Druid","metadata":{"annotations":{},"name":"sample-druid","namespace":"demo"},"spec":{"deepStorage":{"configSecret":{"name":"deep-storage-config"},"type":"s3"},"metadataStorage":{"externallyManaged":true,"name":"my-group","namespace":"dev1"},"topology":{"routers":{"replicas":1}},"version":"30.0.0","zookeeperRef":{"externallyManaged":true,"name":"zk-demo","namespace":"dev"}}}
  finalizers:
  - kubedb.com/druid
  name: sample-druid
  namespace: demo
spec:
  authSecret:
    name: sample-druid-admin-cred
  deepStorage:
    configSecret:
      name: deep-storage-config
    type: s3
  deletionPolicy: Delete
  disableSecurity: false
  healthChecker:
    failureThreshold: 3
    periodSeconds: 30
    timeoutSeconds: 10
  metadataStorage:
    createTables: true
    externallyManaged: true
    linkedDB: druid
    name: my-group
    namespace: dev1
    type: MySQL
    version: 8.0.35
  topology:
    brokers:
      podTemplate:
        controller: {}
        metadata: {}
        spec:
          containers:
          - name: druid
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 500m
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
          initContainers:
          - name: init-druid
            resources:
              limits:
                memory: 512Mi
              requests:
                cpu: 200m
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
          podPlacementPolicy:
            name: default
          securityContext:
            fsGroup: 1000
      replicas: 1
    coordinators:
      podTemplate:
        controller: {}
        metadata: {}
        spec:
          containers:
          - name: druid
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 500m
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
          initContainers:
          - name: init-druid
            resources:
              limits:
                memory: 512Mi
              requests:
                cpu: 200m
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
          podPlacementPolicy:
            name: default
          securityContext:
            fsGroup: 1000
      replicas: 1
    historicals:
      podTemplate:
        controller: {}
        metadata: {}
        spec:
          containers:
          - name: druid
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 500m
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
          initContainers:
          - name: init-druid
            resources:
              limits:
                memory: 512Mi
              requests:
                cpu: 200m
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
          podPlacementPolicy:
            name: default
          securityContext:
            fsGroup: 1000
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      storageType: Durable
    middleManagers:
      podTemplate:
        controller: {}
        metadata: {}
        spec:
          containers:
          - name: druid
            resources:
              limits:
                memory: 2560Mi
              requests:
                cpu: 500m
                memory: 2560Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
          initContainers:
          - name: init-druid
            resources:
              limits:
                memory: 512Mi
              requests:
                cpu: 200m
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
          podPlacementPolicy:
            name: default
          securityContext:
            fsGroup: 1000
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      storageType: Durable
    routers:
      podTemplate:
        controller: {}
        metadata: {}
        spec:
          containers:
          - name: druid
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 500m
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
          initContainers:
          - name: init-druid
            resources:
              limits:
                memory: 512Mi
              requests:
                cpu: 200m
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
          podPlacementPolicy:
            name: default
          securityContext:
            fsGroup: 1000
      replicas: 1
  version: 30.0.0
  zookeeperRef:
    externallyManaged: true
    name: zk-demo
    namespace: dev
    version: 3.7.2
