apiVersion: kubedb.com/v1alpha2
kind: MySQL
metadata:
  creationTimestamp: "2024-06-25T10:13:55Z"
  finalizers:
  - kubedb.com
  generation: 4
  name: druid-quickstart-mysql-metadata
  namespace: demo
  ownerReferences:
  - apiVersion: kubedb.com/v1alpha2
    blockOwnerDeletion: true
    controller: true
    kind: Druid
    name: druid-quickstart
    uid: 8851f243-8fc5-44f7-8efa-5817709e6248
  resourceVersion: "63849"
  uid: 2469a980-e110-4ec7-ba5c-115b70f5f3e4
spec:
  allowedReadReplicas:
    namespaces:
      from: Same
  allowedSchemas:
    namespaces:
      from: Same
  authSecret:
    name: druid-quickstart-mysql-metadata-auth
  autoOps: {}
  coordinator:
    resources: {}
  healthChecker:
    failureThreshold: 1
    periodSeconds: 10
    timeoutSeconds: 10
  init:
    initialized: true
    script:
      configMap:
        name: druid-quickstart-init-script
  podTemplate:
#    controller: {}
#    metadata: {}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: druid-quickstart-mysql-metadata
                  app.kubernetes.io/managed-by: kubedb.com
                  app.kubernetes.io/name: mysqls.kubedb.com
              namespaces:
              - demo
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: druid-quickstart-mysql-metadata
                  app.kubernetes.io/managed-by: kubedb.com
                  app.kubernetes.io/name: mysqls.kubedb.com
              namespaces:
              - demo
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 50
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsGroup: 999
        runAsNonRoot: true
        runAsUser: 999
        seccompProfile:
          type: RuntimeDefault
      resources:
        limits:
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 1Gi
      securityContext:
        fsGroup: 999
      serviceAccountName: druid-quickstart-mysql-metadata
  replicas: 3
  storage:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
  storageType: Durable
  terminationPolicy: Delete
  useAddressType: DNS
  version: 8.0.35
status:
  conditions:
  - lastTransitionTime: "2024-06-25T10:13:55Z"
    message: 'The KubeDB operator has started the provisioning of MySQL: demo/druid-quickstart-mysql-metadata'
    reason: DatabaseProvisioningStartedSuccessfully
    status: "True"
    type: ProvisioningStarted
  - lastTransitionTime: "2024-06-25T10:14:15Z"
    message: All desired replicas are ready.
    reason: AllReplicasReady
    status: "True"
    type: ReplicaReady
  - lastTransitionTime: "2024-06-25T10:14:35Z"
    message: database demo/druid-quickstart-mysql-metadata is accepting connection
    observedGeneration: 4
    reason: AcceptingConnection
    status: "True"
    type: AcceptingConnection
  - lastTransitionTime: "2024-06-25T10:14:35Z"
    message: database demo/druid-quickstart-mysql-metadata is ready
    observedGeneration: 4
    reason: AllReplicasReady
    status: "True"
    type: Ready
  - lastTransitionTime: "2024-06-25T10:14:27Z"
    message: 'Data successfully restored into The MySQL databse: demo/druid-quickstart-mysql-metadata'
    observedGeneration: 3
    reason: SuccessfullyDataRestored
    status: "True"
    type: DataRestored
  - lastTransitionTime: "2024-06-25T10:14:27Z"
    message: 'The MySQL: demo/druid-quickstart-mysql-metadata is successfully provisioned.'
    observedGeneration: 3
    reason: DatabaseSuccessfullyProvisioned
    status: "True"
    type: Provisioned
  observedGeneration: 3
  phase: Ready
